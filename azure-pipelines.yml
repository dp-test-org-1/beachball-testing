# Node.js with React
# Build a Node.js project that uses React.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

parameters:
  - name: dev
    type: boolean
    default: false
    displayName: "Publish pre-release versions"

variables:
  REPO_URL: github.com/dp-test-org-1/beachball-testing
  BRANCH_NAME: $[replace(variables['Build.SourceBranch'], 'refs/heads/', '')]

trigger:
  - main

pool:
  vmImage: ubuntu-latest

stages:
  - stage: "PublishTemplates"
    displayName: "PublishTemplates"
    jobs:
      - job: "PublishTemplates"
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: "20.x"
            displayName: "Install Node.js"

          - script: npm install -g pnpm@^9.0.0
            displayName: Install pnpm

          - script: pnpm install
            displayName: Install dependencies

          - script: pnpm build
            displayName: Build

  - stage: "QA Publish"
    jobs:
      - deployment: "DeployToQA"
        environment: "test-QA"
        strategy:
          runOnce:
            deploy:
              steps:
                - script: |
                    git config --global user.email adityakavale21@gmail.com
                    git config --global user.name "Aditya Kavale"
                    git remote set-url origin "https://$(GITHUB_PAT)@$(REPO_URL)"
                    echo "Deploying to QA environment"
                  # pnpm run release --branch "origin/$(BRANCH_NAME)" --message "Version bump [automated]" $beachballOptions
                  displayName: "Publish package"
                  env:
                    ${{ if eq(parameters.dev, true) }}:
                      beachballOptions: "--config beachball.config.dev.js"
  - stage: "Prod Publish"
    jobs:
      - deployment: "DeployToPROD"
        environment: "test-QA"
        strategy:
          runOnce:
            deploy:
              steps:
                - script: |
                    git config --global user.email adityakavale21@gmail.com
                    git config --global user.name "Aditya Kavale"
                    git remote set-url origin "https://$(GITHUB_PAT)@$(REPO_URL)"
                    echo "Deploying to PROD environment"
                  # pnpm run release --branch "origin/$(BRANCH_NAME)" --message "Version bump [automated]" $beachballOptions
                  displayName: "Publish package"
                  env:
                    ${{ if eq(parameters.dev, true) }}:
                      beachballOptions: "--config beachball.config.dev.js"
